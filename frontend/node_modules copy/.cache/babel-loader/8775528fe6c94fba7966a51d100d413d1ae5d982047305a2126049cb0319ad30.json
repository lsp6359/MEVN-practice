{"ast":null,"code":"export default {\n  //export default를 사용해 다른쪽에서 얘를 사용할 수 있게 함\n  name: 'map-canvas',\n  mounted() {\n    this.initMap();\n    this.setMarker(this.mapCenter, \"ce\");\n  },\n  methods: {\n    initMap() {\n      this.map = new google.maps.Map(document.getElementById(\"map-canvas\"), {\n        //getElementById로 map id 속성의 요소를 가져온다.\n        center: this.mapCenter,\n        //center로 할 위도, 경도를 지정한다.\n        zoom: 17,\n        //zoom size를 지정.\n        maxZoom: 20,\n        minZoom: 3,\n        streetViewControl: true,\n        mapTypeControl: true,\n        fuulscreenControl: true,\n        zoomControl: true\n      });\n      this.$bus.$emit('sendCordinate', this.map.getCenter()); // 처음 마운트될 때 지도의 중심점 좌표를 전달\n      // 받을땐 on 보낼땐 emit\n    },\n\n    setMarker(Points, Label) {\n      //지도에 마커를 찍는 함수.\n      const markers = new google.maps.Marker({\n        position: Points,\n        map: this.map,\n        label: {\n          text: Label,\n          color: \"#FFF\"\n        }\n      });\n      this.map.addListener('center_changed', () => {\n        // center가 바뀌면 실행(지도를 옮기면 좌표가 바뀌므로 좌표를 갱신해야 함)\n        markers.setPosition(this.map.getCenter());\n      });\n      this.map.addListener('dragend', () => {\n        this.$bus.$emit('sendCordinate', this.map.getCenter());\n      });\n    }\n  },\n  data() {\n    return {\n      map: null,\n      mapCenter: {\n        lat: 35.105696,\n        lng: 129.042857\n      }\n    };\n  }\n};","map":{"version":3,"names":["name","mounted","initMap","setMarker","mapCenter","methods","map","google","maps","Map","document","getElementById","center","zoom","maxZoom","minZoom","streetViewControl","mapTypeControl","fuulscreenControl","zoomControl","$bus","$emit","getCenter","Points","Label","markers","Marker","position","label","text","color","addListener","setPosition","data","lat","lng"],"sources":["src/components/GoogleMap.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div id=\"map-canvas\" />\r\n    </div>\r\n</template>\r\n<!--\r\n<script async=\"false\" type=\"text/javascript\"\r\nsrc=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC77x_P0LVvPV02N_nWJGP0Ed5WW8gCy3M\">\r\n</script>\r\n-->\r\n\r\n<script>\r\n\texport default { //export default를 사용해 다른쪽에서 얘를 사용할 수 있게 함\r\n\t\tname: 'map-canvas',\r\n        mounted(){\r\n            this.initMap();\r\n            this.setMarker(this.mapCenter,\"ce\"); \r\n        },\r\n        methods: {\r\n            initMap() {\r\n                this.map = new google.maps.Map(document.getElementById(\"map-canvas\"), { //getElementById로 map id 속성의 요소를 가져온다.\r\n                    center: this.mapCenter, //center로 할 위도, 경도를 지정한다.\r\n                    zoom: 17, //zoom size를 지정.\r\n                    maxZoom: 20,\r\n                    minZoom: 3,\r\n                    streetViewControl: true,\r\n                    mapTypeControl: true,\r\n                    fuulscreenControl: true,\r\n                    zoomControl: true,\r\n                });\r\n                this.$bus.$emit('sendCordinate', this.map.getCenter()); // 처음 마운트될 때 지도의 중심점 좌표를 전달\r\n                // 받을땐 on 보낼땐 emit\r\n            },\r\n            setMarker(Points, Label) {//지도에 마커를 찍는 함수.\r\n                const markers = new google.maps.Marker({\r\n                    position: Points,\r\n                    map: this.map,\r\n                    label: {\r\n                    text: Label,\r\n                    color: \"#FFF\",\r\n                    },\r\n                });\r\n                this.map.addListener('center_changed', () => { // center가 바뀌면 실행(지도를 옮기면 좌표가 바뀌므로 좌표를 갱신해야 함)\r\n                    markers.setPosition(this.map.getCenter())\r\n                });  \r\n                this.map.addListener('dragend', () => {\r\n                    this.$bus.$emit('sendCordinate', this.map.getCenter());\r\n                });  \r\n            },\r\n        },\r\n        data() {\r\n            return {\r\n                map: null,\r\n                mapCenter: { lat: 35.105696, lng: 129.042857 },\r\n            };\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n#map-canvas {\r\n    width: 400px;\r\n    height: 600px;\r\n}\r\n</style>"],"mappings":"AAYA;EAAA;EACAA,IAAA;EACAC,QAAA;IACA,KAAAC,OAAA;IACA,KAAAC,SAAA,MAAAC,SAAA;EACA;EACAC,OAAA;IACAH,QAAA;MACA,KAAAI,GAAA,OAAAC,MAAA,CAAAC,IAAA,CAAAC,GAAA,CAAAC,QAAA,CAAAC,cAAA;QAAA;QACAC,MAAA,OAAAR,SAAA;QAAA;QACAS,IAAA;QAAA;QACAC,OAAA;QACAC,OAAA;QACAC,iBAAA;QACAC,cAAA;QACAC,iBAAA;QACAC,WAAA;MACA;MACA,KAAAC,IAAA,CAAAC,KAAA,uBAAAf,GAAA,CAAAgB,SAAA;MACA;IACA;;IACAnB,UAAAoB,MAAA,EAAAC,KAAA;MAAA;MACA,MAAAC,OAAA,OAAAlB,MAAA,CAAAC,IAAA,CAAAkB,MAAA;QACAC,QAAA,EAAAJ,MAAA;QACAjB,GAAA,OAAAA,GAAA;QACAsB,KAAA;UACAC,IAAA,EAAAL,KAAA;UACAM,KAAA;QACA;MACA;MACA,KAAAxB,GAAA,CAAAyB,WAAA;QAAA;QACAN,OAAA,CAAAO,WAAA,MAAA1B,GAAA,CAAAgB,SAAA;MACA;MACA,KAAAhB,GAAA,CAAAyB,WAAA;QACA,KAAAX,IAAA,CAAAC,KAAA,uBAAAf,GAAA,CAAAgB,SAAA;MACA;IACA;EACA;EACAW,KAAA;IACA;MACA3B,GAAA;MACAF,SAAA;QAAA8B,GAAA;QAAAC,GAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}