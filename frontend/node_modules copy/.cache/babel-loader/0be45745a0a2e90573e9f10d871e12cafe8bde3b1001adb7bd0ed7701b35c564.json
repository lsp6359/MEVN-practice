{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      urlinfo: 'http://localhost:8000/contacts',\n      contactInfo: {\n        _id: null,\n        contactId: null,\n        name: null,\n        email: null,\n        gender: null,\n        phone: null,\n        register_date: null\n      },\n      dialog: false,\n      dialogTitle: null,\n      headers: [{\n        text: '번호',\n        align: 'left',\n        value: 'contactId'\n      }, {\n        text: '이름',\n        align: 'left',\n        value: 'name'\n      }, {\n        text: '이메일',\n        align: 'left',\n        value: 'email'\n      }, {\n        text: '성별',\n        align: 'left',\n        value: 'gender'\n      }, {\n        text: '전화',\n        align: 'left',\n        value: 'phone'\n      }, {\n        text: '등록일',\n        align: 'left',\n        value: 'register_date'\n      }, {\n        text: '관리',\n        align: 'left',\n        value: ''\n      }],\n      items: []\n    };\n  },\n  created() {\n    axios.get(this.urlinfo) //서버에 요청하기\n    .then(res => {\n      console.log(res.data); //성공시\n      this.items = res.data;\n    }).catch(err => {\n      alert('에러 발생: ' + err); //에러 발생\n    });\n  },\n\n  methods: {\n    addContact() {\n      this.dialog = true;\n      this.dialogTitle = \"추가\";\n      this.contactInfo.register_date = Date.now();\n    },\n    updateContact(data) {\n      this.dialog = true;\n      this.dialogTitle = \"수정\";\n      this.contactInfo.contactId = data.contactId;\n      this.contactInfo.name = data.name;\n      this.contactInfo.email = data.email;\n      this.contactInfo.gender = data.gender;\n      this.contactInfo.phone = data.phone;\n      this.contactInfo.register_date = data.register_date;\n    },\n    deleteContact(data) {\n      this.dialog = true;\n      this.dialogTitle = \"삭제\";\n      this.contactInfo.contactId = data.contactId;\n      console.log('deleteContact : ' + data);\n    },\n    btnClick($event) {\n      this.dialog = false;\n      if ($event.target.innerHTML == \"확인\") {\n        if (this.dialogTitle == \"추가\") {\n          axios.post(this.urlinfo, {\n            contactId: this.contactInfo.contactId,\n            name: this.contactInfo.name,\n            email: this.contactInfo.email,\n            gender: this.contactInfo.gender,\n            phone: this.contactInfo.phone //, register_date:this.contactInfo.register_date\n          }).then(() => {\n            axios.get(this.urlinfo) //서버에 요청하기\n            .then(res => {\n              //console.log(res.data); //성공시\n              this.items = res.data;\n              alert(\"연락처 추가 성공\");\n            }).catch(err => {\n              alert('에러 발생: ' + err); //에러 발생\n            });\n          }).catch(err => {\n            alert('에러 발생: ' + err); //에러 발생\n          });\n        } else if (this.dialogTitle == \"수정\") {\n          //alert(\"입력된 정보 : \" + \"이메일 : \" + this.contactInfo.email + \" 패스워드 : \" + this.contactInfo.password);\n          axios.put(this.urlinfo + '/' + this.contactInfo.contactId, {\n            contactId: this.contactInfo.contactId,\n            name: this.contactInfo.name,\n            email: this.contactInfo.email,\n            gender: this.contactInfo.gender,\n            phone: this.contactInfo.phone,\n            register_date: this.contactInfo.register_date\n          }).then(() => {\n            axios.get(this.urlinfo) //서버에 요청하기\n            .then(res => {\n              //console.log(res.data); //성공시\n              this.items = res.data;\n              alert(\"업데이트 성공\");\n            }).catch(err => {\n              alert('에러 발생: ' + err); //에러 발생\n            });\n          }).catch(err => {\n            alert('에러 발생: ' + err); //에러 발생\n          });\n        } else {\n          axios.delete(this.urlinfo + '/' + this.contactInfo.contactId, {\n            data: {\n              contactId: this.contactInfo.contactId\n            }\n          }).then(result => {\n            console.log(\"삭제 후\" + result); //성공시\n            axios.get(this.urlinfo) //서버에 요청하기\n            .then(res => {\n              this.items = res.data;\n              alert(\"삭제 성공\");\n            }).catch(err => {\n              alert(' 삭제 후 데이터 가져오는 중 에러 발생: ' + err); //에러 발생\n            });\n          }).catch(err => {\n            alert('에러 발생: ' + err);\n          });\n        }\n      }\n      this.contactInfo.contactId = null;\n      this.contactInfo.name = null;\n      this.contactInfo.email = null;\n      this.contactInfo.gender = null;\n      this.contactInfo.phone = null;\n      this.contactInfo.register_date = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","urlinfo","contactInfo","_id","contactId","name","email","gender","phone","register_date","dialog","dialogTitle","headers","text","align","value","items","created","get","then","res","console","log","catch","err","alert","methods","addContact","Date","now","updateContact","deleteContact","btnClick","$event","target","innerHTML","post","put","delete","result"],"sources":["src/components/DataTable.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <v-layout row justify-center>\r\n      <v-dialog v-model=\"dialog\" persistent max-width=\"500px\">\r\n        <v-card>\r\n          <v-card-title>\r\n            <span class=\"headline\">{{dialogTitle}}</span>\r\n          </v-card-title>\r\n          <v-card-text>\r\n            <v-container grid-list-md>\r\n              <v-layout wrap>\r\n                <v-flex xs12>\r\n                  <v-text-field label=\"번호\" v-model=\"contactInfo.contactId\" required></v-text-field>\r\n                </v-flex>\r\n                <v-flex xs12>\r\n                  <v-text-field label=\"이름\"  v-model=\"contactInfo.name\" required></v-text-field>\r\n                </v-flex>\r\n                <v-flex xs12>\r\n                  <v-text-field label=\"이메일\"  v-model=\"contactInfo.email\" required></v-text-field>\r\n                </v-flex> \r\n                <v-flex xs12>\r\n                  <v-text-field label=\"성별\"  v-model=\"contactInfo.gender\" required></v-text-field>\r\n                </v-flex>    \r\n                <v-flex xs12>\r\n                  <v-text-field label=\"전화\"  v-model=\"contactInfo.phone\" required></v-text-field>\r\n                </v-flex> \r\n                <v-flex xs12>\r\n                  <v-text-field label=\"등록일\"  v-model=\"contactInfo.register_date\" required></v-text-field>\r\n                </v-flex> \r\n              </v-layout>\r\n            </v-container>\r\n          </v-card-text>\r\n          <v-card-actions>\r\n            <v-spacer></v-spacer>\r\n            <v-btn color=\"blue darken-1\" text @click=\"btnClick($event)\">취소</v-btn>\r\n            <v-btn color=\"blue darken-1\" text @click=\"btnClick($event)\">확인</v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </v-dialog>\r\n    </v-layout>\r\n\t<v-btn color=\"primary\" v-on:click.native=\"addContact()\">추가</v-btn>\r\n\t<v-data-table :headers=\"headers\" :items=\"items\" class=\"elevation-1\">\r\n\t\t<template v-slot:item=\"row\">\r\n\t\t<tr>\r\n\t\t\t<td>{{row.item.contactId}}</td>\r\n\t\t\t<td>{{row.item.name}}</td>\r\n\t\t\t<td>{{row.item.email}}</td>\r\n\t\t\t<td>{{row.item.gender}}</td>\r\n\t\t\t<td>{{row.item.phone}}</td>\r\n\t\t\t<td>{{row.item.register_date}}</td>\r\n\t\t\t<td class=\"text-xs-right\">\r\n\t\t\t\t<v-btn color=\"primary\" v-on:click.native=\"updateContact(row.item)\">수정</v-btn>\r\n\t\t\t\t<v-btn color=\"primary\" v-on:click.native=\"deleteContact(row.item)\">삭제</v-btn>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n      </template>\r\n\t</v-data-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';  \r\nexport default {\r\n  data () {\r\n    return {\r\n      urlinfo:'http://localhost:8000/contacts',\r\n      contactInfo:{\r\n        _id: null,\r\n        contactId: null,\r\n        name:null,\r\n        email:null,\r\n        gender:null,\r\n        phone:null,\r\n        register_date: null\r\n      },\r\n      dialog: false,\r\n      dialogTitle:null,\r\n\r\n      headers: [\r\n        { text: '번호', align: 'left', value: 'contactId'},\r\n        { text: '이름', align: 'left',value: 'name' },\r\n        { text: '이메일', align: 'left', value: 'email' },\r\n        { text: '성별', align: 'left', value: 'gender' },\r\n\t\t{ text: '전화', align: 'left', value: 'phone' },\r\n\t\t{ text: '등록일', align: 'left', value: 'register_date' },\r\n\t\t{ text: '관리', align: 'left', value: '' },\r\n      ],\r\n      items:[]\r\n    }\r\n  },\r\n  created(){\r\n    axios.get(this.urlinfo) //서버에 요청하기\r\n    .then((res) => {\r\n      console.log(res.data); //성공시\r\n      this.items = res.data;\r\n    })\r\n    .catch((err) => {\r\n      alert('에러 발생: ' + err); //에러 발생\r\n    });\r\n  },\r\n  methods:{\r\n    addContact(){\r\n      this.dialog = true;\r\n      this.dialogTitle = \"추가\";\r\n      this.contactInfo.register_date = Date.now();\r\n    },\r\n    updateContact(data){\r\n      this.dialog = true;\r\n      this.dialogTitle = \"수정\";\r\n      this.contactInfo.contactId = data.contactId;\r\n      this.contactInfo.name = data.name;\r\n      this.contactInfo.email = data.email;\r\n      this.contactInfo.gender = data.gender;\r\n      this.contactInfo.phone = data.phone;\r\n      this.contactInfo.register_date = data.register_date;\r\n    },\r\n    deleteContact(data){\r\n      this.dialog = true;\r\n      this.dialogTitle = \"삭제\";\r\n      this.contactInfo.contactId = data.contactId;\r\n      console.log('deleteContact : ' + data);\r\n    },\r\n\r\n    btnClick($event){\r\n      this.dialog = false;\r\n      if($event.target.innerHTML == \"확인\"){\r\n        if(this.dialogTitle ==\"추가\"){ \r\n          axios.post(this.urlinfo,{ \r\n            contactId: this.contactInfo.contactId, name: this.contactInfo.name, email:  this.contactInfo.email, \r\n            gender: this.contactInfo.gender,\r\n            phone:this.contactInfo.phone  //, register_date:this.contactInfo.register_date\r\n          })\r\n          .then(() => {\r\n            axios.get(this.urlinfo) //서버에 요청하기\r\n            .then((res) => {\r\n              //console.log(res.data); //성공시\r\n              this.items = res.data;\r\n              alert(\"연락처 추가 성공\");\r\n            })\r\n            .catch((err) => {\r\n              alert('에러 발생: ' + err); //에러 발생\r\n            });\r\n            \r\n          })\r\n          .catch((err) => {\r\n            alert('에러 발생: ' + err); //에러 발생\r\n          });          \r\n        }\r\n        else if(this.dialogTitle==\"수정\"){\r\n          //alert(\"입력된 정보 : \" + \"이메일 : \" + this.contactInfo.email + \" 패스워드 : \" + this.contactInfo.password);\r\n          axios.put(this.urlinfo + '/'+ this.contactInfo.contactId, { \r\n            contactId: this.contactInfo.contactId, name: this.contactInfo.name, email:  this.contactInfo.email, \r\n            gender: this.contactInfo.gender,\r\n            phone:this.contactInfo.phone, register_date:this.contactInfo.register_date\r\n          })\r\n          .then(() => {          \r\n            axios.get(this.urlinfo) //서버에 요청하기\r\n            .then((res) => {\r\n              //console.log(res.data); //성공시\r\n              this.items = res.data;\r\n              alert(\"업데이트 성공\");\r\n            })\r\n            .catch((err) => {\r\n              alert('에러 발생: ' + err); //에러 발생\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            alert('에러 발생: ' + err); //에러 발생\r\n          }); \r\n\r\n        }\r\n        else {\r\n          axios.delete(this.urlinfo + '/'+ this.contactInfo.contactId, { data: { contactId: this.contactInfo.contactId } })\r\n          .then((result) => { \r\n            console.log(\"삭제 후\" + result); //성공시\r\n            axios.get(this.urlinfo) //서버에 요청하기\r\n            .then((res) => {\r\n              this.items = res.data;\r\n              alert(\"삭제 성공\");\r\n            })\r\n            .catch((err) => {\r\n              alert(' 삭제 후 데이터 가져오는 중 에러 발생: ' + err); //에러 발생\r\n            });            \r\n          })\r\n          .catch((err) => { alert('에러 발생: ' + err); });          \r\n\r\n        }\r\n      }\r\n      this.contactInfo.contactId = null;\r\n      this.contactInfo.name = null;\r\n      this.contactInfo.email = null;\r\n      this.contactInfo.gender = null;\r\n      this.contactInfo.phone = null;\r\n      this.contactInfo.register_date = null;\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n  div{\r\n    margin:0 5px 0 5px;\r\n  }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}